// See LICENSE.SiFive for license details.
// See LICENSE.Berkeley for license details.

package freechips.rocketchip.rocket

import chisel3.util._

object VectorInstructions {
   def V_VL8      = BitPat("b????00???????????000?????0000111")
   def V_VL16     = BitPat("b????00???????????101?????0000111")
   def V_VL32     = BitPat("b????00???????????110?????0000111")
   def V_VL64     = BitPat("b????00???????????111?????0000111")
   def V_VLS8     = BitPat("b????10???????????000?????0000111")
   def V_VLS16    = BitPat("b????10???????????101?????0000111")
   def V_VLS32    = BitPat("b????10???????????110?????0000111")
   def V_VLS64    = BitPat("b????10???????????111?????0000111")
   def V_VLX8     = BitPat("b?????1???????????000?????0000111")
   def V_VLX16    = BitPat("b?????1???????????101?????0000111")
   def V_VLX32    = BitPat("b?????1???????????110?????0000111")
   def V_VLX64    = BitPat("b?????1???????????111?????0000111")
   def V_VS8      = BitPat("b????00???????????000?????0100111")
   def V_VS16     = BitPat("b????00???????????101?????0100111")
   def V_VS32     = BitPat("b????00???????????110?????0100111")
   def V_VS64     = BitPat("b????00???????????111?????0100111")
   def V_VSS8     = BitPat("b????10???????????000?????0100111")
   def V_VSS16    = BitPat("b????10???????????101?????0100111")
   def V_VSS32    = BitPat("b????10???????????110?????0100111")
   def V_VSS64    = BitPat("b????10???????????111?????0100111")
   def V_VSX8     = BitPat("b?????1???????????000?????0100111")
   def V_VSX16    = BitPat("b?????1???????????101?????0100111")
   def V_VSX32    = BitPat("b?????1???????????110?????0100111")
   def V_VSX64    = BitPat("b?????1???????????111?????0100111")
   def V_OPIVV    = BitPat("b?????????????????000?????1010111")
   def V_OPFVV    = BitPat("b?0???????????????001?????1010111")
   def V_OPFVV1   = BitPat("b11???????????????001?????1010111")
   def V_VWFUNARY0= BitPat("b010000???????????001?????1010111")
   def V_VFUNARY0 = BitPat("b010010???????????001?????1010111")
   def V_VFUNARY1 = BitPat("b010011???????????001?????1010111")
   def V_VMFEQ    = BitPat("b011000???????????001?????1010111")
   def V_VMFLE    = BitPat("b011001???????????001?????1010111")
   def V_VMFLT    = BitPat("b011011???????????001?????1010111")
   def V_VMFNE    = BitPat("b011100???????????001?????1010111")
   def V_OPMVV    = BitPat("b?0???????????????010?????1010111")
   def V_OPMVV1   = BitPat("b11???????????????010?????1010111")
   def V_VWXUNARY0= BitPat("b010000???????????010?????1010111")
   def V_VXUNARY0 = BitPat("b010010???????????010?????1010111")
   def V_VMUNARY0 = BitPat("b010100???????????010?????1010111")
   def V_VCOMPRESS= BitPat("b010111???????????010?????1010111")
   def V_VMANDNOT = BitPat("b011000???????????010?????1010111")
   def V_VMAND    = BitPat("b011001???????????010?????1010111")
   def V_VMOR     = BitPat("b011010???????????010?????1010111")
   def V_VMXOR    = BitPat("b011011???????????010?????1010111")
   def V_VMORNOT  = BitPat("b011100???????????010?????1010111")
   def V_VMNAND   = BitPat("b011101???????????010?????1010111")
   def V_VMNOR    = BitPat("b011110???????????010?????1010111")
   def V_VMXNOR   = BitPat("b011111???????????010?????1010111")
   def V_OPIVI    = BitPat("b?????????????????011?????1010111")
   def V_OPIVX    = BitPat("b?????????????????100?????1010111")
   def V_OPFVF    = BitPat("b?????????????????101?????1010111")
   def V_OPMVX    = BitPat("b?????????????????110?????1010111")
   def V_VSETVLI  = BitPat("b0????????????????111?????1010111")
   def V_VSETIVLI = BitPat("b11???????????????111?????1010111")
   def V_VSETVL   = BitPat("b1000000??????????111?????1010111")
}